<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="b19ed9d9-6e6d-4115-8723-15207c28e3df" created="2.6.0" activeEnvironment="Default environment" name="CTDemo" resourceRoot="" updated="2.6.0 2019-01-14T14:47:06Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="42a5f8bc-09cc-46f8-b033-47e052faae0f" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 1" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/getData" path="/getData" id="ba61f7f0-9d44-40c7-871f-7a2a4740ef53"><con:settings/><con:parameters/><con:method name="GET" id="70698b58-1eed-415d-abde-c21be5087e67" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/java; charset=windows-1252</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="bf0ea2fe-a50d-4340-91a8-951524d81a31" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:7171</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="91069f9e-b690-4dba-ad62-2213da6d2274" name="DevOpsDemoTestSuite"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="b9758824-115a-4f48-afc9-c3dfa20239f7" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TestCase 1" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="ad20c911-72a1-4cca-83d4-bc3c90d0ad9d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>XLPath</con:name><con:value>D:\DevOpsTraining\DevOpsMaturityModel\CT\GET.xlsx</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasource" name="DataSource" id="25b4d4e8-17e9-4a07-9b10-fe7769c9be78"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>D:/DevOpsTraining/DevOpsMaturityModel/CT/GET.xlsx</file><worksheet/><cell>A2</cell><ignoreEmpty>false</ignoreEmpty><evaluateFormulas>false</evaluateFormulas></con:configuration></con:dataSource><con:shared>true</con:shared><con:restartShared>true</con:restartShared><con:property>Response</con:property><con:property>Result</con:property><con:property>Status_Code</con:property><con:completeLastOperation>true</con:completeLastOperation><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="REST Request" id="34396241-b590-4be7-b19f-82da9ac2a200"><con:settings/><con:config service="REST Service 1" resourcePath="/getData" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="bf0ea2fe-a50d-4340-91a8-951524d81a31" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:7171</con:endpoint><con:request/><con:originalUri>http://localhost/getData</con:originalUri><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="6bf4b0c6-02fd-442c-aef1-ade1a2913659"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def httpValue= testRunner.testCase.testSteps['REST Request'].testRequest.response.getResponseHeaders()
log.info httpValue
def status = httpValue["#status#"].toString()
log.info status
//Get the status code value from the Input sheet
def status_Code = context.expand( '${DataSource#Status_Code}' )
log.infoEnabled
//Assert actual value to the expected value
if (status.contains(status_Code))
{
return "PASS"
}
else
{
return "FAIL"
}</script></con:config></con:testStep><con:testStep type="datasink" name="DataSink" id="6b8241a3-9b71-4a98-bf8a-00b43d21e0f5"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="Excel"><con:configuration><file/><outfile>D:/DevOpsTraining/DevOpsMaturityModel/CT/GET.xlsx</outfile><worksheet>BMO</worksheet><cell>A2</cell><evaluateFormulas>false</evaluateFormulas><append>false</append></con:configuration></con:dataSink><con:properties><con:property><con:name>Response</con:name><con:value>${REST Request#RawResponse}</con:value></con:property><con:property><con:name>Result</con:name><con:value>${Groovy Script#result}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="b8f55a81-9fcc-4895-8596-eb49a35fbc56"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>REST Request</targetStep><discardResults>true</discardResults></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>